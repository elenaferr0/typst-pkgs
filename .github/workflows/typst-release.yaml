name: Typst Package Release

# Define permissions at the workflow level
permissions:
  contents: write
  packages: write

# Only trigger manually via workflow_dispatch
on:
  workflow_dispatch:
    inputs:
      library:
        description: 'Library/namespace name (e.g., typst-template-kit)'
        required: true
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true

jobs:
  release-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Validate inputs
        id: validate-inputs
        run: |
          LIBRARY="${{ github.event.inputs.library }}"
          VERSION="${{ github.event.inputs.version }}"
          
          # Check if the specified version directory exists
          if [[ ! -d "$LIBRARY/$VERSION" ]]; then
            echo "Error: Directory $LIBRARY/$VERSION does not exist"
            echo "Available directories:"
            find . -mindepth 2 -maxdepth 2 -type d | grep -v "node_modules" | grep -v ".git"
            exit 1
          fi
          
          echo "library=$LIBRARY" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_path=$LIBRARY/$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check-release
        run: |
          # Check if the release already exists
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.validate-inputs.outputs.version }}")
            
          if [[ "$RELEASE_EXISTS" == "200" ]]; then
            echo "Release already exists for version ${{ steps.validate-inputs.outputs.version }}"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "No existing release found for version ${{ steps.validate-inputs.outputs.version }}"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create release archives
        if: steps.check-release.outputs.exists != 'true'
        id: create-archives
        run: |
          LIBRARY="${{ steps.validate-inputs.outputs.library }}"
          VERSION="${{ steps.validate-inputs.outputs.version }}"
          VERSION_PATH="${{ steps.validate-inputs.outputs.version_path }}"
          
          # Debug info
          echo "Creating archives for ${VERSION_PATH}"
          ls -la "${VERSION_PATH}" || echo "Directory not found"
          
          # Create archives directory
          mkdir -p ./archives
          
          # Create tar.gz archive
          tar -czf "./archives/${LIBRARY}-${VERSION}.tar.gz" "${VERSION_PATH}"
          
          # Create zip archive
          zip -r "./archives/${LIBRARY}-${VERSION}.zip" "${VERSION_PATH}"
          
          echo "targz=./archives/${LIBRARY}-${VERSION}.tar.gz" >> $GITHUB_OUTPUT
          echo "zip=./archives/${LIBRARY}-${VERSION}.zip" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.check-release.outputs.exists != 'true'
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.validate-inputs.outputs.version }}
          name: Version ${{ steps.validate-inputs.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Manual release of ${{ steps.validate-inputs.outputs.library }} version ${{ steps.validate-inputs.outputs.version }}
          files: |
            ${{ steps.create-archives.outputs.targz }}
            ${{ steps.create-archives.outputs.zip }}
      
      - name: Release Status
        if: steps.check-release.outputs.exists == 'true'
        run: |
          echo "::warning::Release v${{ steps.validate-inputs.outputs.version }} already exists. No new release was created."
